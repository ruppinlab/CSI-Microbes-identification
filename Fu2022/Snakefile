from os.path import join, basename
import pandas as pd
from snakemake.utils import min_version
##### set minimum snakemake version #####
min_version("5.1.2")
##### load config and sample sheets #####
configfile: join("config", "PathSeq-config.yaml")
#validate(config, schema="schemas/config.schema.yaml")

# wildcard_constraints:
#     patient="SC0[0-3][0-9]",
#     sample="Sample[0-9][a-c]",

# patients = pd.read_csv(config["patients"], sep="\t").set_index("patient", drop=False)
# # validate(samples, schema="schemas/samples.schema.yaml")
#
# lanes = pd.read_csv(config["samples"], dtype=str, sep="\t").set_index(["patient", "sample", "lane"], drop=False)
# lanes.index = lanes.index.set_levels([i.astype(str) for i in lanes.index.levels])  # enforce str in index
# samples = lanes[["sample", "patient"]].drop_duplicates()
# cells = pd.read_csv(config["units"], sep="\t").set_index(["sample", "barcode", "patient"], drop=False)

# Snakemake includes
# include: "../RNA-snakemake-rules/rules/cellranger.smk"
# include: "../pathogen-discovery-rules/rules/PathSeq-10x.smk"

# Directories
FASTQ_DIR = "FASTQ"
PATIENT_FASTQ_DIR = join("FASTQ", "raw", "{patient}")
CR_SAMPLE_ODIR = "{patient}-{sample}"

# Input Files
SRA_FASTQ1_FILE = join(FASTQ_DIR, "{run}_1.fastq")
SRA_FASTQ2_FILE = join(FASTQ_DIR, "{run}_2.fastq")
SRA_FASTQ3_FILE = join(FASTQ_DIR, "{run}_3.fastq")


# CellRanger files
CB_FASTQ_FILE = join(PATIENT_FASTQ_DIR, "{sample}_{lane}_R1_001.fastq.gz")
cDNA_FASTQ_FILE = join(PATIENT_FASTQ_DIR, "{sample}_{lane}_R2_001.fastq.gz")
CR_BAM_FILE = join(CR_SAMPLE_ODIR, "outs", "possorted_genome_bam.bam")

# PathSeq Files
PATHSEQ_CELL_SCORE = join("output", "PathSeq", "{patient}-{sample}-{cell}", "pathseq.txt")

rule all:
    input:
        expand(SRA_FASTQ1_FILE, run="SRR13160581"),


### rules to download FASTQ files ###

# download files from SRA
# need to --include-technical to get the 10x UMI and CB reads
# this requires
rule download_FASTQ_from_SRA:
    group:
        "FASTQ"
    params:
        FASTQ_DIR
    output:
        temp(SRA_FASTQ1_FILE),
        temp(SRA_FASTQ2_FILE),
        temp(SRA_FASTQ3_FILE),
    shell:
        "module load sratoolkit && "
        "fasterq-dump -O {params} -t /lscratch/$SLURM_JOBID "
        "--include-technical --split-files {wildcards.run}"
